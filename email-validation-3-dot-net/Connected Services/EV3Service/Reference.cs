//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EV3Service
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidateEmailResponse", Namespace="http://www.serviceobjects.com")]
    public partial class ValidateEmailResponse : object
    {
        
        private EV3Service.ValidateEmailInfo ValidateEmailInfoField;
        
        private EV3Service.Error ErrorField;
        
        private string DebugField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public EV3Service.ValidateEmailInfo ValidateEmailInfo
        {
            get
            {
                return this.ValidateEmailInfoField;
            }
            set
            {
                this.ValidateEmailInfoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public EV3Service.Error Error
        {
            get
            {
                return this.ErrorField;
            }
            set
            {
                this.ErrorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Debug
        {
            get
            {
                return this.DebugField;
            }
            set
            {
                this.DebugField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidateEmailInfo", Namespace="http://www.serviceobjects.com")]
    public partial class ValidateEmailInfo : object
    {
        
        private int ScoreField;
        
        private string IsDeliverableField;
        
        private string EmailAddressInField;
        
        private string EmailAddressOutField;
        
        private bool EmailCorrectedField;
        
        private string BoxField;
        
        private string DomainField;
        
        private string TopLevelDomainField;
        
        private string TopLevelDomainDescriptionField;
        
        private string IsSMTPServerGoodField;
        
        private string IsCatchAllDomainField;
        
        private string IsSMTPMailBoxGoodField;
        
        private string WarningCodesField;
        
        private string WarningDescriptionsField;
        
        private string NotesCodesField;
        
        private string NotesDescriptionsField;
        
        private string MXRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score
        {
            get
            {
                return this.ScoreField;
            }
            set
            {
                this.ScoreField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string IsDeliverable
        {
            get
            {
                return this.IsDeliverableField;
            }
            set
            {
                this.IsDeliverableField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string EmailAddressIn
        {
            get
            {
                return this.EmailAddressInField;
            }
            set
            {
                this.EmailAddressInField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string EmailAddressOut
        {
            get
            {
                return this.EmailAddressOutField;
            }
            set
            {
                this.EmailAddressOutField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool EmailCorrected
        {
            get
            {
                return this.EmailCorrectedField;
            }
            set
            {
                this.EmailCorrectedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Box
        {
            get
            {
                return this.BoxField;
            }
            set
            {
                this.BoxField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string Domain
        {
            get
            {
                return this.DomainField;
            }
            set
            {
                this.DomainField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string TopLevelDomain
        {
            get
            {
                return this.TopLevelDomainField;
            }
            set
            {
                this.TopLevelDomainField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string TopLevelDomainDescription
        {
            get
            {
                return this.TopLevelDomainDescriptionField;
            }
            set
            {
                this.TopLevelDomainDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string IsSMTPServerGood
        {
            get
            {
                return this.IsSMTPServerGoodField;
            }
            set
            {
                this.IsSMTPServerGoodField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string IsCatchAllDomain
        {
            get
            {
                return this.IsCatchAllDomainField;
            }
            set
            {
                this.IsCatchAllDomainField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string IsSMTPMailBoxGood
        {
            get
            {
                return this.IsSMTPMailBoxGoodField;
            }
            set
            {
                this.IsSMTPMailBoxGoodField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string WarningCodes
        {
            get
            {
                return this.WarningCodesField;
            }
            set
            {
                this.WarningCodesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string WarningDescriptions
        {
            get
            {
                return this.WarningDescriptionsField;
            }
            set
            {
                this.WarningDescriptionsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string NotesCodes
        {
            get
            {
                return this.NotesCodesField;
            }
            set
            {
                this.NotesCodesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string NotesDescriptions
        {
            get
            {
                return this.NotesDescriptionsField;
            }
            set
            {
                this.NotesDescriptionsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=16)]
        public string MXRecord
        {
            get
            {
                return this.MXRecordField;
            }
            set
            {
                this.MXRecordField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Error", Namespace="http://www.serviceobjects.com")]
    public partial class Error : object
    {
        
        private string TypeField;
        
        private string TypeCodeField;
        
        private string DescField;
        
        private string DescCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TypeCode
        {
            get
            {
                return this.TypeCodeField;
            }
            set
            {
                this.TypeCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Desc
        {
            get
            {
                return this.DescField;
            }
            set
            {
                this.DescField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string DescCode
        {
            get
            {
                return this.DescCodeField;
            }
            set
            {
                this.DescCodeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.serviceobjects.com", ConfigurationName="EV3Service.IEV3Library")]
    public interface IEV3Library
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailAddress_GETXML", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailAddress_GETXMLResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailAddress_GETXMLAsync(string EmailAddress, string AllowCorrections, string Timeout, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailAddress_QUERYGETXML", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailAddress_QUERYGETXMLRespons" +
            "e")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailAddress_QUERYGETXMLAsync(string EmailAddress, string AllowCorrections, string Timeout, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailAddress_GETJSON", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailAddress_GETJSONResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailAddress_GETJSONAsync(string EmailAddress, string AllowCorrections, string Timeout, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailAddress_POST", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailAddress_POSTResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailAddress_POSTAsync(string EmailAddress, string AllowCorrections, string Timeout, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailAddress_PUT", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailAddress_PUTResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailAddress_PUTAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailAddress_DELETE", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailAddress_DELETEResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailAddress_DELETEAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailAddress", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailAddressResponse")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailAddressAsync(string EmailAddress, string AllowCorrections, string Timeout, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFull_GETXML", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFull_GETXMLResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFull_GETXMLAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFull_QUERYGETXML", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFull_QUERYGETXMLResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFull_QUERYGETXMLAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFull_GETJSON", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFull_GETJSONResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFull_GETJSONAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFull_POST", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFull_POSTResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFull_POSTAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFull_PUT", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFull_PUTResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFull_PUTAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFull_DELETE", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFull_DELETEResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFull_DELETEAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFull", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFullResponse")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFullAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFast_GETXML", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFast_GETXMLResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFast_GETXMLAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFast_QUERYGETXML", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFast_QUERYGETXMLResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFast_QUERYGETXMLAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFast_GETJSON", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFast_GETJSONResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFast_GETJSONAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFast_POST", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFast_POSTResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFast_POSTAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFast_PUT", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFast_PUTResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFast_PUTAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFast_DELETE", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFast_DELETEResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFast_DELETEAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFast", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFastResponse")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFastAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFullNoCorrections_GETXML", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFullNoCorrections_GETXMLRe" +
            "sponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFullNoCorrections_GETXMLAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFullNoCorrections_QUERYGET" +
            "XML", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFullNoCorrections_QUERYGET" +
            "XMLResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFullNoCorrections_QUERYGETXMLAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFullNoCorrections_GETJSON", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFullNoCorrections_GETJSONR" +
            "esponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFullNoCorrections_GETJSONAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFullNoCorrections_POST", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFullNoCorrections_POSTResp" +
            "onse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFullNoCorrections_POSTAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFullNoCorrections_PUT", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFullNoCorrections_PUTRespo" +
            "nse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFullNoCorrections_PUTAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFullNoCorrections_DELETE", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFullNoCorrections_DELETERe" +
            "sponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFullNoCorrections_DELETEAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFullNoCorrections", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFullNoCorrectionsResponse")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFullNoCorrectionsAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFastNoCorrections_GETXML", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFastNoCorrections_GETXMLRe" +
            "sponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFastNoCorrections_GETXMLAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFastNoCorrections_QUERYGET" +
            "XML", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFastNoCorrections_QUERYGET" +
            "XMLResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFastNoCorrections_QUERYGETXMLAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFastNoCorrections_GETJSON", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFastNoCorrections_GETJSONR" +
            "esponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFastNoCorrections_GETJSONAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFastNoCorrections_POST", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFastNoCorrections_POSTResp" +
            "onse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFastNoCorrections_POSTAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFastNoCorrections_PUT", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFastNoCorrections_PUTRespo" +
            "nse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFastNoCorrections_PUTAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFastNoCorrections_DELETE", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFastNoCorrections_DELETERe" +
            "sponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ValidateEmailInfo")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFastNoCorrections_DELETEAsync(string EmailAddress, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/IEV3Library/ValidateEmailFastNoCorrections", ReplyAction="http://www.serviceobjects.com/IEV3Library/ValidateEmailFastNoCorrectionsResponse")]
        System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFastNoCorrectionsAsync(string EmailAddress, string LicenseKey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public interface IEV3LibraryChannel : EV3Service.IEV3Library, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public partial class EV3LibraryClient : System.ServiceModel.ClientBase<EV3Service.IEV3Library>, EV3Service.IEV3Library
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public EV3LibraryClient() : 
                base(EV3LibraryClient.GetDefaultBinding(), EV3LibraryClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.DOTSEmailValidation3.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EV3LibraryClient(EndpointConfiguration endpointConfiguration) : 
                base(EV3LibraryClient.GetBindingForEndpoint(endpointConfiguration), EV3LibraryClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EV3LibraryClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(EV3LibraryClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EV3LibraryClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(EV3LibraryClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EV3LibraryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailAddress_GETXMLAsync(string EmailAddress, string AllowCorrections, string Timeout, string LicenseKey)
        {
            return base.Channel.ValidateEmailAddress_GETXMLAsync(EmailAddress, AllowCorrections, Timeout, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailAddress_QUERYGETXMLAsync(string EmailAddress, string AllowCorrections, string Timeout, string LicenseKey)
        {
            return base.Channel.ValidateEmailAddress_QUERYGETXMLAsync(EmailAddress, AllowCorrections, Timeout, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailAddress_GETJSONAsync(string EmailAddress, string AllowCorrections, string Timeout, string LicenseKey)
        {
            return base.Channel.ValidateEmailAddress_GETJSONAsync(EmailAddress, AllowCorrections, Timeout, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailAddress_POSTAsync(string EmailAddress, string AllowCorrections, string Timeout, string LicenseKey)
        {
            return base.Channel.ValidateEmailAddress_POSTAsync(EmailAddress, AllowCorrections, Timeout, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailAddress_PUTAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailAddress_PUTAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailAddress_DELETEAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailAddress_DELETEAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailAddressAsync(string EmailAddress, string AllowCorrections, string Timeout, string LicenseKey)
        {
            return base.Channel.ValidateEmailAddressAsync(EmailAddress, AllowCorrections, Timeout, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFull_GETXMLAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFull_GETXMLAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFull_QUERYGETXMLAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFull_QUERYGETXMLAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFull_GETJSONAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFull_GETJSONAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFull_POSTAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFull_POSTAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFull_PUTAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFull_PUTAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFull_DELETEAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFull_DELETEAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFullAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFullAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFast_GETXMLAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFast_GETXMLAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFast_QUERYGETXMLAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFast_QUERYGETXMLAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFast_GETJSONAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFast_GETJSONAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFast_POSTAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFast_POSTAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFast_PUTAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFast_PUTAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFast_DELETEAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFast_DELETEAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFastAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFastAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFullNoCorrections_GETXMLAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFullNoCorrections_GETXMLAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFullNoCorrections_QUERYGETXMLAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFullNoCorrections_QUERYGETXMLAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFullNoCorrections_GETJSONAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFullNoCorrections_GETJSONAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFullNoCorrections_POSTAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFullNoCorrections_POSTAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFullNoCorrections_PUTAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFullNoCorrections_PUTAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFullNoCorrections_DELETEAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFullNoCorrections_DELETEAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFullNoCorrectionsAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFullNoCorrectionsAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFastNoCorrections_GETXMLAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFastNoCorrections_GETXMLAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFastNoCorrections_QUERYGETXMLAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFastNoCorrections_QUERYGETXMLAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFastNoCorrections_GETJSONAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFastNoCorrections_GETJSONAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFastNoCorrections_POSTAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFastNoCorrections_POSTAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFastNoCorrections_PUTAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFastNoCorrections_PUTAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFastNoCorrections_DELETEAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFastNoCorrections_DELETEAsync(EmailAddress, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<EV3Service.ValidateEmailResponse> ValidateEmailFastNoCorrectionsAsync(string EmailAddress, string LicenseKey)
        {
            return base.Channel.ValidateEmailFastNoCorrectionsAsync(EmailAddress, LicenseKey);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        #if !NET6_0_OR_GREATER
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        #endif
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.DOTSEmailValidation3))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.DOTSEmailValidation3))
            {
                return new System.ServiceModel.EndpointAddress("https://sws.serviceobjects.com/ev3/api.svc/soap");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return EV3LibraryClient.GetBindingForEndpoint(EndpointConfiguration.DOTSEmailValidation3);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return EV3LibraryClient.GetEndpointAddress(EndpointConfiguration.DOTSEmailValidation3);
        }
        
        public enum EndpointConfiguration
        {
            
            DOTSEmailValidation3,
        }
    }
}
